#!/bin/bash

set -e

# Шоттс: Проверим, установлен ли git
# Бодрийяр: Без инструмента нет симуляции, без симуляции — нет мира.

if command -v git > /dev/null 2>&1;
then
  echo " Git версии $(git --version) установлен"

  #  Шоттс: Создаём рабочее пространство для эксперимента
  mkdir -p git-pull-example 
  cd git-pull-example || { echo "Не удалось перейти в каталог"; exit 1;}

  #  Шоттс: Инициализируем bare-репозиторий как центр синхронизации
  #  Бодрийяр: Пустая форма, не содержащая содержимого. Символ власти.
  git init --bare remote.git

  cd ..

  #  Шоттс: Два разработчика, две вселенные: devops1 и devops2
  #  Бодрийяр: Создание зеркал — основа симулякров.

  mkdir -p devops1 
  mkdir -p devops2

  #  Шоттс: Погружаемся в первую рабочую копию
  cd devops1 || { echo " Не удалось перейти в каталог"; exit 1; }

  #  Шоттс: Клонируем удалённый репозиторий
  #  Бодрийяр: Восстановление оригинала, которого никто не видел.
  git clone remote.git

  #  Шоттс: Создаём содержимое — три файла
  echo "Hello," > file1.txt
  echo "World" > file2.txt
  echo "!" > file3.txt

  #  Шоттс: Фиксируем изменения
  git add .
  git commit -m "added 3 files: file1.txt, file2.txt, file3.txt"

  #  Шоттс: Отправляем в центр (origin)
  git push origin main

  cd .. 

  #  Шоттс: Заходим во вторую копию, чтобы синхронизироваться
  cd devops2 || { echo "⛔ Не удалось перейти в каталог"; exit 1; }

  #  Шоттс: Клонируем тот же удалённый
  git clone remote.git

  #  Шоттс: Получаем актуальное состояние
  git pull origin main

  #  Бодрийяр: Мы получаем не сами файлы, а знаки файлов. Систему версий. Идеальную копию.
  git status
  git log --oneline

  cd ..
else
  echo " Git не установлен. Установите git."
  #  Бодрийяр: Без инструмента — нет эмуляции. Без эмуляции — нет иллюзии смысла.
fi

